<?xml version="1.0" encoding="UTF-8"?>

	<!--
		===================================================================================
		FICHIER DE CONFIGURATION SPRING COMMUN A TOUTES LES WEBAPPS WEBINTAKE

		Définition de la dataSource vers la base de données Webintake
		===================================================================================
	-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- le gestionnaire de BLOB / CLOB de chez Spring -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="dataSource">
			<ref bean="datasource" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.wft.model</value>
				<value>com.wft.model.user</value>
			</list>
		</property>
		<!-- 
		<property name="annotatedClasses">
			<list>
				<value>com.wft.model.Project</value>
				<value>com.wft.model.Authors</value>
				<value>com.wft.model.user.User</value>
				<value>com.wft.model.user.Administrator</value>
				<value>com.wft.model.user.Gamer</value>
				<value>com.wft.model.user.Organizer</value>
			</list>
		</property>
 		-->
 	</bean>

	<!-- Hibernate Transaction Manager Definition -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- TODO: Switch to annotations for transactions
	<tx:annotation-driven/>
	-->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<idref local="transactionInterceptor" />
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>*DAO</value>
			</list>
		</property>
	</bean>

	<bean id="projectDAO" class="com.wft.service.dao.impl.ProjectDAO">
		<constructor-arg>
			<value>com.wft.model.Project</value>
		</constructor-arg>
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="userDAO" class="com.wft.service.dao.impl.UserDAO">
		<constructor-arg>
			<value>com.wft.model.user.User</value>
		</constructor-arg>
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>


	<!--
	The Gilead POJO stateless proxy store.
	 -->

	<!--
		<bean id="proxyStore"
		class="net.sf.gilead.core.store.stateless.StatelessProxyStore" />

		<bean id="persistenceUtil"
		class="net.sf.gilead.core.hibernate.HibernateUtil"> <property
		name="sessionFactory" ref="sessionFactory"></property> </bean>
	-->


	<!--
		Gilead persistentBeanManager binds the POJO store with a Hibernate
		session factory (through the hibernate util).
	-->

	<!--
		<bean id="persistentBeanManager"
		class="net.sf.gilead.core.PersistentBeanManager"> <property
		name="proxyStore" ref="proxyStore" /> <property name="persistenceUtil"
		ref="persistenceUtil"></property> </bean>
	-->

</beans>    	
