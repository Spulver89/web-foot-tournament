<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd            
	                       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd            
	                       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd            
	                       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	                       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:property-placeholder location="classpath*:*.properties" />

	<!-- Turn on AspectJ @Configurable support -->
	<context:spring-configured />

	<context:component-scan base-package="com.wft" />

	<!-- Turn on @Autowired, @PostConstruct etc support -->
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />


	<!-- Hibernate Transaction Manager Definition -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Using HibernateTemplate, and shared by all DAO object because it is 
		thread-safe -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="fetchSize" value="20" />
		<property name="allowCreate" value="true" />
		<property name="alwaysUseNewSession" value="false" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<context:annotation-config />

	<!-- TODO: Need to find a way to manage transactions+session+collections+lazy -->
	<!-- <bean class="org.springframework.orm.hibernate3.HibernateInterceptor"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> <aop:aspectj-autoproxy 
		/> <bean class="com.wftbernateInterceptorAdvice"/> -->

	<!-- le gestionnaire de BLOB / CLOB de chez Spring -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="txDataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg ref="datasource" />
	</bean>

	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<property name="dataSource">
			<ref bean="txDataSource" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.wft.model</value>
				<value>com.wft.model.user</value>
				<value>com.wft.model.tournament</value>
				<value>com.wft.model.tournament.championship</value>
				<value>com.wft.model.tournament.game</value>
				<value>com.wft.model.tournament.cupwithgrps</value>
				<value>com.wft.model.tournament.league</value>
				<value>com.wft.model.tournament.simplecup</value>
				<value>com.wft.model.team</value>
			</list>
		</property>
	</bean>


	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="fooMessages" />

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
		p:defaultLocale="en_US" />

	<bean class="com.wft.util.VaadinApplicationObjectSupport" />

</beans>